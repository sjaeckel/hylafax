#ident $Header: /d/sam/flexkit/fax/util/RCS/StatusLabel.c++,v 1.2 91/05/23 12:49:53 sam Exp $

/*
 * Copyright (c) 1991 by Sam Leffler.
 * All rights reserved.
 *
 * This file is provided for unrestricted use provided that this
 * legend is included on all tape media and as a part of the
 * software program in whole or part.  Users may copy, modify or
 * distribute this file at will.
 */
#include "Types.h"
#include "Font.h"
#include "StatusLabel.h"
#include "Palette.h"

StatusLabel::StatusLabel(fxLayoutConstraint xc, fxFont* f, fxRGBColor* tc, fxRGBColor* fc) :
    textColor(fx_black)
{
    xConstraint = xc;
    font = f ? f : fxGetDefaultFont();
    setMinimumSize(font->getWidth("1234567 Found"), font->getMaxHeight());
    if (tc) textColor = *tc;
    if (fc) fillColor = *fc;
}
StatusLabel::~StatusLabel() {}

fxLayoutConstraint
StatusLabel::getLayoutConstraint(fxOrientation axis)
    { if (axis == horizontal) return xConstraint; else return fixedSize; }
void StatusLabel::setTextColor(const fxRGBColor& c) { textColor = c; }
void StatusLabel::setFillColor(const fxRGBColor& c) { fillColor = c; }

void
StatusLabel::setValue(const char* va_alist ...)
#define	fmt va_alist
{
    va_list ap;
    va_start(ap, va_alist);
    vsetValue(fmt, ap);
    va_end(ap);
}
#undef	fmt

void
StatusLabel::vsetValue(const char* fmt, va_list ap)
{
    char buf[1024];		// XXX
    vsprintf(buf, fmt, ap);
    text = buf;
    if (opened) update();
}

void
StatusLabel::paint()
{
    if (!fillColor.isTransparent())
	fillColor.fill(0, 0, width-1, height-1);
    if (text.length() > 0) {
	textColor.color();
	font->imageSpan((char*)text, text.length(), 0, font->getMaxDescender());
    }
}
