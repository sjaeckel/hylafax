<HTML><HEAD><TITLE>
HylaFAQ: How do I send WordPerfect files from a DOS machine?
</TITLE></HEAD><BODY>
<H1>Q19: How do I send WordPerfect files from a DOS machine?</H1>
<P><HR>
<A HREF="mailto:flexfaq@flake.asd.sgi.com">
<IMG SRC="@HTMLPATH@/icons/faq-feedback.gif" ALT="?" ALIGN=left HSPACE=8 BORDER=0>
</A>
Got something to say about this answer?  Use the 
<A HREF="@CGIPATH@/faq-feedback?Question=How+do+I+send+WordPerfect+files+from+a+DOS+machine%3F">
feedback form</A>
to send your comments to the HylaFAQ maintainers, or hit the question mark
button to invoke the mailer.
<BR CLEAR=left><HR>
<DL COMPACT>
<DT>Q.
<DD><I>How do I send WordPerfect files from a DOS machine?</I>
<P>
I have a user who uploads Wordperfect text-output files from his PC
to our network, and then attempts to fax the files. The files have
a trailing ^Z (DOS EOF marker?), so sendfax doesn't recognize
the files as ascii and aborts.
<P>
We can clean up the files manually using a dos2unix filter,
but what can I use as a typerule to automate this?
The EOF marker is not at any fixed offset, and the file won't
match ascii only because of the EOF marker.
Has anyone already done this for me?
<P>
<DT>A.
<DD><B>Date</B>: <I>Wed, 16 Mar 94 15:17:31 MST</I><BR>
<B>From</B>: <I>morrow@cns.ucalgary.ca (Bill Morrow)</I><BR>
<B>Subject</B>: <I>SUMMARY: faxing Wordperfect files directly</I><BR>
<P>
last week I asked about how to get sendfax to handle Wordperfect
format files directly, so that users would not have to convert their
WP files to text or Postcript by hand. The following is what I came up with.
<P>
I've attached the "source" below, it's fairly simple and short.
<P>
Note that this requires Unix Wordperfect, we have version 5.0.
<P>
Thanks to les@fb.com (Les Mikesell) for hints, and the wptops script.
<P>
First add this rule to your typerules:
<LISTING>
---------------------- cut here ----------------------------------
0	byte		0xff		error	WordPerfect document
>1	string		WPC		ps	/usr/local/bin/wpr %i >%o
---------------------- cut here ----------------------------------
</LISTING>
the wpr script converts WP format to Postscript by running 
Wordperfect's wprint, which WP cleverly did not make a filter.
<LISTING>
---------------------- cut here ----------------------------------
#!/bin/sh 
# wpr - output Postscript from a WP file

infile=/tmp/WP2PSin$$;
outfile=/tmp/WP2PSout$$;
cat $1 > $infile
/usr/local/wp/sun4/bin/wprint -i$outfile $infile  > /dev/null 2>&1
# wait for wprint to finish
while [ ! -f $outfile ]; do
	sleep 1
done
/usr/local/etc/wptops < $outfile
/bin/rm -f $infile $outfile
---------------------- cut here ----------------------------------
</LISTING>

wptops is Les Miksell's perl script which cleans up Word Perfect's
corrupt Postscript files.
<LISTING>
---------------------- cut here ----------------------------------
#!/usr/local/bin/perl
# Original version came from Angus Duggans's psutils
# modified version from les@fb.com (Les Mikesell )
# fixwpps: get semi-conforming PostScript out of WordPerfect 5.[01] file
# feed this into perl

#eval 'exec perl -S $0 "$@"'
#   if $running_under_some_shell;
$page = 0;
while (<>) {
	s/^ *%!/%!/;
	s/\015//;
	s/\004//;
#   s/(_[a-zA-Z]+)([0-9]+)/\1 \2/g;
   if (/^_bp/) {
      $page++;
      print STDOUT "%%Page: $page $page\n";
      print STDOUT $_;
   } elsif (/^([^\/].*\S.*)(_bp.*)/) {
      $page++;
      print STDOUT "$1\n";
      print STDOUT "%%Page: $page $page\n";
      print STDOUT "$2\n";
   } elsif (/^_ed/) {
      print STDOUT "%%Trailer:\n";
      print STDOUT $_;
      print STDOUT "%%Pages: $page\n";
   } elsif (/^([^\/].*\S.*)(_ed.*)/) {
      print STDOUT "$1\n";
      print STDOUT "%%Trailer:\n";
      print STDOUT "$2\n";
      print STDOUT "%%Pages: $page\n";
   } else {
      print STDOUT $_;
   }
}
---------------------- cut here ----------------------------------
</LISTING>
</DL>
<P><HR>
<ADDRESS>
<A HREF="@HTMLPATH@/sam.html">Sam Leffler</A> / <A HREF="mailto:sam@engr.sgi.com">sam@engr.sgi.com</A>.
</ADDRESS>
</BODY></HTML>
